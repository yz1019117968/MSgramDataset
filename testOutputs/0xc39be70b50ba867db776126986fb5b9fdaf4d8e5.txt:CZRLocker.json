{
 "vulnerabilities": {
  "callstack": [], 
  "time_dependency": [], 
  "reentrancy": [], 
  "integer_overflow": [
   "./restContracts/0xc39be70b50ba867db776126986fb5b9fdaf4d8e5.txt:131:16: Warning: Integer Overflow.\n        delete lockArr[index]\nInteger Overflow occurs if:\n    index = 95780971304118053647396689196894323976171195136475134\n    owner = 0", 
   "./restContracts/0xc39be70b50ba867db776126986fb5b9fdaf4d8e5.txt:43:1: Warning: Integer Overflow.\ncontract CZRLocker is owned {\r\n^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    startLockTime = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    amount = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    owner = 0", 
   "./restContracts/0xc39be70b50ba867db776126986fb5b9fdaf4d8e5.txt:157:9: Warning: Integer Overflow.\n        lockedCZRMap[addr].push(LockedCZR(startLockTime, lockMonth, amount, 0))\nInteger Overflow occurs if:\n    startLockTime = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    amount = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    owner = 0", 
   "./restContracts/0xc39be70b50ba867db776126986fb5b9fdaf4d8e5.txt:87:5: Warning: Integer Overflow.\n    mapping(address => LockedCZR[]) public lockedCZRMap", 
   "./restContracts/0xc39be70b50ba867db776126986fb5b9fdaf4d8e5.txt:277:9: Warning: Integer Overflow.\n        totalReceived += msg.value\nInteger Overflow occurs if:\n    totalReceived = 1\n    isPaused = 0"
  ], 
  "parity_multisig_bug_2": [], 
  "integer_underflow": [
   "./restContracts/0xc39be70b50ba867db776126986fb5b9fdaf4d8e5.txt:195:29: Warning: Integer Underflow.\n                uint time = now - lock.startLockTime\nInteger Underflow occurs if:\n    owner = 0"
  ], 
  "money_concurrency": [], 
  "assertion_failure": []
 }, 
 "evm_code_coverage": "74.4"
}