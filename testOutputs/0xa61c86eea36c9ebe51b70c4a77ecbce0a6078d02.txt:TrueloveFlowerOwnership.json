{
 "vulnerabilities": {
  "callstack": [], 
  "time_dependency": [], 
  "reentrancy": [], 
  "integer_overflow": [
   "./restContracts/0xa61c86eea36c9ebe51b70c4a77ecbce0a6078d02.txt:1075:3: Warning: Integer Overflow.\n\t\tflowerBalances[_to] += _value\nInteger Overflow occurs if:\n    flowerBalances[_to] = 85653202831209899131921273706816539903532775246499202405936884825549521553152\n    _value = 44369063854674067291029404066660873444229566625561754964912869797988903417852\n    flowerBalances[msg.sender] = 44369063854674067291029404066660873444229566625561754964912869797988903417852", 
   "./restContracts/0xa61c86eea36c9ebe51b70c4a77ecbce0a6078d02.txt:1091:3: Warning: Integer Overflow.\n\t\tflowerBalances[_to] += _value\nInteger Overflow occurs if:\n    _value = 37717208912933073374861050775867160511051478474789766132129094234564326678807\n    flowerBalances[_to] = 95515132405035013240498949941729301185179799140209929091396633094036584928231\n    flowerAllowed[_from][msg.sender] = 37717208912933073374861050775867160511051478474789766132129094234564326678807\n    flowerBalances[_from] = 37717208912933073374861050775867160511051478474789766132129094234564326678807"
  ], 
  "parity_multisig_bug_2": [], 
  "integer_underflow": [], 
  "money_concurrency": [], 
  "assertion_failure": []
 }, 
 "evm_code_coverage": "99.3"
}