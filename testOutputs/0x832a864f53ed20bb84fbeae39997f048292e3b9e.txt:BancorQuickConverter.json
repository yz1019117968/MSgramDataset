{
 "vulnerabilities": {
  "callstack": [], 
  "time_dependency": [], 
  "reentrancy": [], 
  "integer_overflow": [
   "./restContracts/0x832a864f53ed20bb84fbeae39997f048292e3b9e.txt:791:5: Warning: Integer Overflow.\n    function convert(IERC20Token[] _path, uint256 _amount, uint256 _minReturn) public payable returns (uint256) {\r\n    ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    _path = 115792089237316195423570985008687907853269984665640564039457584007913129639935", 
   "./restContracts/0x832a864f53ed20bb84fbeae39997f048292e3b9e.txt:821:5: Warning: Integer Overflow.\n    function claimAndConvert(IERC20Token[] _path, uint256 _amount, uint256 _minReturn) public returns (uint256) {\r\n    ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    _path = 115792089237316195423570985008687907853269984665640564039457584007913129639935", 
   "./restContracts/0x832a864f53ed20bb84fbeae39997f048292e3b9e.txt:635:5: Warning: Integer Overflow.\n    function convertFor(IERC20Token[] _path, uint256 _amount, uint256 _minReturn, address _for)\r\n    ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    _path = 115792089237316195423570985008687907853269984665640564039457584007913129639935", 
   "./restContracts/0x832a864f53ed20bb84fbeae39997f048292e3b9e.txt:751:5: Warning: Integer Overflow.\n    function claimAndConvertFor(IERC20Token[] _path, uint256 _amount, uint256 _minReturn, address _for) public returns (uint256) {\r\n    ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    _path = 115792089237316195423570985008687907853269984665640564039457584007913129639935"
  ], 
  "parity_multisig_bug_2": [], 
  "integer_underflow": [], 
  "money_concurrency": [], 
  "assertion_failure": []
 }, 
 "evm_code_coverage": "40.8"
}