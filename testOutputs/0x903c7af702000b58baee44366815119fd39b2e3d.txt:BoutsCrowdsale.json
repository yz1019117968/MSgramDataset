{
 "vulnerabilities": {
  "callstack": [], 
  "time_dependency": [], 
  "reentrancy": [], 
  "integer_overflow": [
   "./restContracts/0x903c7af702000b58baee44366815119fd39b2e3d.txt:1101:5: Warning: Integer Overflow.\n    uint32[] public BONUS_TIMES", 
   "./restContracts/0x903c7af702000b58baee44366815119fd39b2e3d.txt:1105:5: Warning: Integer Overflow.\n    uint32[] public BONUS_AMOUNTS", 
   "./restContracts/0x903c7af702000b58baee44366815119fd39b2e3d.txt:1157:5: Warning: Integer Overflow.\n    function setBonusesForTimes(uint32[] times, uint32[] values) public onlyOwner {\r\n    ^\nSpanning multiple lines.", 
   "./restContracts/0x903c7af702000b58baee44366815119fd39b2e3d.txt:1199:5: Warning: Integer Overflow.\n    function setBonusesForAmounts(uint32[] amounts, uint32[] values) public onlyOwner {\r\n    ^\nSpanning multiple lines.", 
   "./restContracts/0x903c7af702000b58baee44366815119fd39b2e3d.txt:1107:5: Warning: Integer Overflow.\n    uint32[] public BONUS_AMOUNTS_VALUES", 
   "./restContracts/0x903c7af702000b58baee44366815119fd39b2e3d.txt:165:17: Warning: Integer Overflow.\n    uint256 c = a + b\nInteger Overflow occurs if:\n    balances[_to] = 95515132405035013240498949941729301185179799140209929091396633094036584928231\n    allowed[_from][msg.sender] = 37717208912933073374861050775867160511051478474789766132129094234564326678807\n    balances[_from] = 37717208912933073374861050775867160511051478474789766132129094234564326678807"
  ], 
  "parity_multisig_bug_2": [], 
  "integer_underflow": [], 
  "money_concurrency": [], 
  "assertion_failure": []
 }, 
 "evm_code_coverage": "42.6"
}