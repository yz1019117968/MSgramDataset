{
 "vulnerabilities": {
  "callstack": [], 
  "time_dependency": [], 
  "reentrancy": [], 
  "integer_overflow": [
   "./restContracts/0xb8e392da7abb836cff06d827531a7e5f1b00bed2.txt:527:26: Warning: Integer Overflow.\n        uint swapToken = tokensOwned[_owner][length - 1]\nInteger Overflow occurs if:\n    tokensOwned[_owner].length = 115792089237316195423570985008687907853269984665640564039457584007913129639930\n    _to = 1461501637330902918203684832716283019655932542975\n    _from = 1461501637330902918203684832716283019655932542975\n    tokensForApproved[_jingleId] = 0\n    tokensForOwner[_jingleId] = 1461501637330902918203684832716283019655932542975", 
   "./restContracts/0xb8e392da7abb836cff06d827531a7e5f1b00bed2.txt:215:5: Warning: Integer Overflow.\n    mapping(uint => uint[]) public soundEffects", 
   "./restContracts/0xb8e392da7abb836cff06d827531a7e5f1b00bed2.txt:483:46: Warning: Integer Overflow.\n        return (jinglesInfo[_jingleId].name, jinglesInfo[_jingleId].author", 
   "./restContracts/0xb8e392da7abb836cff06d827531a7e5f1b00bed2.txt:459:16: Warning: Integer Overflow.\n        return tokensOwned[_owner][_index]\nInteger Overflow occurs if:\n    _index = 115792089237316195423570985008687907853269984665640564039457575000713874898943\n    tokensOwned[_owner][_index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944", 
   "./restContracts/0xb8e392da7abb836cff06d827531a7e5f1b00bed2.txt:351:5: Warning: Integer Overflow.\n    function composeJingle(address _owner, uint[5] jingles, \r\n    ^\nSpanning multiple lines.", 
   "./restContracts/0xb8e392da7abb836cff06d827531a7e5f1b00bed2.txt:181:1: Warning: Integer Overflow.\ncontract Jingle is Ownable, ERC721 {\r\n^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    tokensForOwner[_jingleId] = 0"
  ], 
  "parity_multisig_bug_2": [], 
  "integer_underflow": [
   "./restContracts/0xb8e392da7abb836cff06d827531a7e5f1b00bed2.txt:527:46: Warning: Integer Underflow.\n        uint swapToken = tokensOwned[_owner][length - 1\nInteger Underflow occurs if:\n    tokensOwned[_owner].length = 0\n    _to = 1461501637330902918203684832716283019655932542975\n    _from = 1461501637330902918203684832716283019655932542975\n    tokensForApproved[_jingleId] = 0\n    tokensForOwner[_jingleId] = 1461501637330902918203684832716283019655932542975", 
   "./restContracts/0xb8e392da7abb836cff06d827531a7e5f1b00bed2.txt:483:9: Warning: Integer Underflow.\n        return (jinglesInfo[_jingleId].name, jinglesInfo[_jingleId].author)\nInteger Underflow occurs if:\n    return (jinglesInfo[_jingleId].name, jinglesInfo[_jingleId].author) = 1", 
   "./restContracts/0xb8e392da7abb836cff06d827531a7e5f1b00bed2.txt:207:5: Warning: Integer Underflow.\n    mapping(uint => MetaInfo) public jinglesInfo"
  ], 
  "money_concurrency": [], 
  "assertion_failure": []
 }, 
 "evm_code_coverage": "50.6"
}