{
 "vulnerabilities": {
  "callstack": [], 
  "time_dependency": [
   "./restContracts/0xb5abdeb81161ff05e1d5c018c929b297a47e229b.txt:1225:10: Warning: Timestamp Dependency.\n    else if (block.timestamp <= endsAt && !isCrowdsaleFull()) return State.Funding;\r\n    ^\nSpanning multiple lines.", 
   "./restContracts/0xb5abdeb81161ff05e1d5c018c929b297a47e229b.txt:1225:14: Warning: Timestamp Dependency.\n    else if (block.timestamp <= endsAt && !isCrowdsaleFull()", 
   "./restContracts/0xb5abdeb81161ff05e1d5c018c929b297a47e229b.txt:1223:10: Warning: Timestamp Dependency.\n    else if (block.timestamp < startsAt) return State.PreFunding;\r\n    ^\nSpanning multiple lines."
  ], 
  "reentrancy": [], 
  "integer_overflow": [
   "./restContracts/0xb5abdeb81161ff05e1d5c018c929b297a47e229b.txt:1795:3: Warning: Integer Overflow.\n  function getKYCPayload(bytes dataframe) public constant returns(address whitelistedAddress, uint128 customerId, uint32 minEth, uint32 maxEth) {\r\n  ^\nSpanning multiple lines.", 
   "./restContracts/0xb5abdeb81161ff05e1d5c018c929b297a47e229b.txt:1871:3: Warning: Integer Overflow.\n  function buyWithKYCData(bytes dataframe, uint8 v, bytes32 r, bytes32 s) public payable returns(uint tokenAmount) {\r\n  ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    dataframe = 115792089237316195423570985008687907853269984665640564039457584007913129639935"
  ], 
  "parity_multisig_bug_2": [], 
  "integer_underflow": [], 
  "money_concurrency": [], 
  "assertion_failure": []
 }, 
 "evm_code_coverage": "59.3"
}